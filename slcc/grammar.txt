type =
	"int" | "float".

function =
	"function" type identifier "(" function_parameters ")" compound_statement.

compound_statement =
	"{" { statement }* "}".

expression =
	term { sign term }*.

expression_list =
	{ expression }.

sign =
	"+" | "-".

mulop =
	"*" | "/" | "%";

term =
        factor { mulop factor }*.

factor =
	constant |
	identifier "(" expression_list ")" |
	identifier |
	"(" expression ")" |
	"-" factor.

variable =
	"local" type identifier.

return_statement =
	"return" expression.

statement =
	compound_statement | 
	identifier "=" expression |
	identifier "(" expression_list ")" |
	return_statement |
	variable.

module =
	{ function }*